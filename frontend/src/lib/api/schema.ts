/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/courses": {
    get: operations["course.getAllCourses"];
  };
  "/courses/{course}": {
    get: operations["course.getCourse"];
  };
  "/courses/{course}/professors": {
    get: operations["course.getCourseProfessors"];
  };
  "/courses/{course}/survey": {
    get: operations["course.getCourseSurvey"];
  };
  "/professors": {
    get: operations["professor.getAllProfessors"];
  };
  "/professors/{professor}": {
    get: operations["professor.getProfessor"];
  };
  "/professors/{professor}/courses": {
    get: operations["professor.getProfessorCourses"];
  };
  "/professors/{professor}/survey": {
    get: operations["professor.getProfessorSurvey"];
  };
  "/search": {
    post: operations["search.search"];
  };
  "/subjects": {
    get: operations["subject.getAllSubjects"];
  };
  "/subjects/{subject}": {
    get: operations["subject.getSubject"];
  };
  "/subjects/{subject}/courses": {
    get: operations["subject.getSubjectCourses"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** CourseResource */
    CourseResource: {
      code: string;
      title: string;
      description: string;
      requirements: string | null;
      units: number | null;
      languages: string[];
      components: string[];
      englishEquivalent: string | null;
      frenchEquivalent: string | null;
      previousTermIds: number[];
      grades: components["schemas"]["GradesResource"];
      subject: components["schemas"]["SubjectResource"];
    };
    /** CourseSearchRecourse */
    CourseSearchRecourse: {
      code: string;
      title: string;
    };
    /** CourseSectionResource */
    CourseSectionResource: {
      term: string;
      section: string;
      grades: components["schemas"]["GradesResource"];
    };
    /** CourseWithSectionsResource */
    CourseWithSectionsResource: {
      code: string;
      title: string;
      description: string;
      requirements: string | null;
      units: number | null;
      languages: string[];
      components: string[];
      grades: components["schemas"]["GradesResource"];
      sections: components["schemas"]["CourseSectionResource"][];
    };
    /** GradesResource */
    GradesResource: {
      total: number;
      mean: number | null;
      median: string | null;
      mode: string | null;
      distribution: {
        [key: string]: number;
      };
    };
    /** ProfessorResource */
    ProfessorResource: {
      id: number;
      name: string;
      grades: components["schemas"]["GradesResource"];
      rmpReview: components["schemas"]["RateMyProfessorReviewResource"];
    };
    /** ProfessorSearchRecourse */
    ProfessorSearchRecourse: {
      id: number;
      name: string;
    };
    /** ProfessorWithSectionsResource */
    ProfessorWithSectionsResource: {
      id: number;
      name: string;
      grades: components["schemas"]["GradesResource"];
      sections: components["schemas"]["CourseSectionResource"][];
    };
    /** RateMyProfessorReviewResource */
    RateMyProfessorReviewResource: {
      link: string;
      rating: number;
      difficulty: number;
      numRatings: number;
      department: string | null;
    };
    /** SubjectResource */
    SubjectResource: {
      code: string;
      subject: string;
      faculty: string;
    };
    /** SubjectSearchRecourse */
    SubjectSearchRecourse: {
      code: string;
      subject: string;
    };
    /** SubjectWithGradesResource */
    SubjectWithGradesResource: {
      code: string;
      subject: string;
      faculty: string;
      coursesCount: number;
      grades: components["schemas"]["GradesResource"];
    };
    /** SurveyQuestionResource */
    SurveyQuestionResource: {
      question: string;
      totalResponses: number;
      responses: components["schemas"]["SurveyResponseResource"][];
    };
    /** SurveyResponseResource */
    SurveyResponseResource: {
      response: string;
      numResponses: number;
    };
  };
  responses: {
    /** @description Not found */
    ModelNotFoundException: {
      content: {
        "application/json": {
          /** @description Error overview. */
          message: string;
        };
      };
    };
    /** @description Validation error */
    ValidationException: {
      content: {
        "application/json": {
          /** @description Errors overview. */
          message: string;
          /** @description A detailed description of each field that failed validation. */
          errors: {
            [key: string]: string[];
          };
        };
      };
    };
  };
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  "course.getAllCourses": {
    parameters: {
      header?: {
        "Accept-Language"?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": string[];
        };
      };
    };
  };
  "course.getCourse": {
    parameters: {
      header?: {
        "Accept-Language"?: string;
      };
      path: {
        /** @description The course code */
        course: string;
      };
    };
    responses: {
      /** @description `CourseResource` */
      200: {
        content: {
          "application/json": components["schemas"]["CourseResource"];
        };
      };
      404: components["responses"]["ModelNotFoundException"];
    };
  };
  "course.getCourseProfessors": {
    parameters: {
      header?: {
        "Accept-Language"?: string;
      };
      path: {
        /** @description The course code */
        course: string;
      };
    };
    responses: {
      /** @description Array of `ProfessorWithSectionsResource` */
      200: {
        content: {
          "application/json": components["schemas"]["ProfessorWithSectionsResource"][];
        };
      };
      404: components["responses"]["ModelNotFoundException"];
    };
  };
  "course.getCourseSurvey": {
    parameters: {
      header?: {
        "Accept-Language"?: string;
      };
      path: {
        /** @description The course code */
        course: string;
      };
    };
    responses: {
      /** @description Array of `SurveyQuestionResource` */
      200: {
        content: {
          "application/json": components["schemas"]["SurveyQuestionResource"][];
        };
      };
      404: components["responses"]["ModelNotFoundException"];
    };
  };
  "professor.getAllProfessors": {
    parameters: {
      header?: {
        "Accept-Language"?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": number[];
        };
      };
    };
  };
  "professor.getProfessor": {
    parameters: {
      header?: {
        "Accept-Language"?: string;
      };
      path: {
        /** @description The professor ID */
        professor: number;
      };
    };
    responses: {
      /** @description `ProfessorResource` */
      200: {
        content: {
          "application/json": components["schemas"]["ProfessorResource"];
        };
      };
      404: components["responses"]["ModelNotFoundException"];
    };
  };
  "professor.getProfessorCourses": {
    parameters: {
      header?: {
        "Accept-Language"?: string;
      };
      path: {
        /** @description The professor ID */
        professor: number;
      };
    };
    responses: {
      /** @description Array of `CourseWithSectionsResource` */
      200: {
        content: {
          "application/json": components["schemas"]["CourseWithSectionsResource"][];
        };
      };
      404: components["responses"]["ModelNotFoundException"];
    };
  };
  "professor.getProfessorSurvey": {
    parameters: {
      header?: {
        "Accept-Language"?: string;
      };
      path: {
        /** @description The professor ID */
        professor: number;
      };
    };
    responses: {
      /** @description Array of `SurveyQuestionResource` */
      200: {
        content: {
          "application/json": components["schemas"]["SurveyQuestionResource"][];
        };
      };
      404: components["responses"]["ModelNotFoundException"];
    };
  };
  "search.search": {
    parameters: {
      header?: {
        "Accept-Language"?: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": {
          q: string;
        };
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            courses: components["schemas"]["CourseSearchRecourse"][];
            professors: components["schemas"]["ProfessorSearchRecourse"][];
            subjects: components["schemas"]["SubjectSearchRecourse"][];
          };
        };
      };
      422: components["responses"]["ValidationException"];
    };
  };
  "subject.getAllSubjects": {
    parameters: {
      header?: {
        "Accept-Language"?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": string[];
        };
      };
    };
  };
  "subject.getSubject": {
    parameters: {
      header?: {
        "Accept-Language"?: string;
      };
      path: {
        /** @description The subject code */
        subject: string;
      };
    };
    responses: {
      /** @description `SubjectWithGradesResource` */
      200: {
        content: {
          "application/json": components["schemas"]["SubjectWithGradesResource"];
        };
      };
      404: components["responses"]["ModelNotFoundException"];
    };
  };
  "subject.getSubjectCourses": {
    parameters: {
      header?: {
        "Accept-Language"?: string;
      };
      path: {
        /** @description The subject code */
        subject: string;
      };
    };
    responses: {
      /** @description Array of `CourseResource` */
      200: {
        content: {
          "application/json": components["schemas"]["CourseResource"][];
        };
      };
      404: components["responses"]["ModelNotFoundException"];
    };
  };
}
